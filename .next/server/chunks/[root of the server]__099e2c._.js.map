{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 159, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Users/Nayeem/Downloads/webprog/nextjs-dashboard/app/lib/placeholder-data.ts"],"sourcesContent":["// This file contains placeholder data that you'll be replacing with real data in the Data Fetching chapter:\n// https://nextjs.org/learn/dashboard-app/fetching-data\nconst users = [\n  {\n    id: '410544b2-4001-4271-9855-fec4b6a6442a',\n    name: 'User',\n    email: 'user@nextmail.com',\n    password: '123456',\n  },\n];\n\nconst customers = [\n  {\n    id: 'd6e15727-9fe1-4961-8c5b-ea44a9bd81aa',\n    name: 'Evil Rabbit',\n    email: 'evil@rabbit.com',\n    image_url: '/customers/evil-rabbit.png',\n  },\n  {\n    id: '3958dc9e-712f-4377-85e9-fec4b6a6442a',\n    name: 'Delba de Oliveira',\n    email: 'delba@oliveira.com',\n    image_url: '/customers/delba-de-oliveira.png',\n  },\n  {\n    id: '3958dc9e-742f-4377-85e9-fec4b6a6442a',\n    name: 'Lee Robinson',\n    email: 'lee@robinson.com',\n    image_url: '/customers/lee-robinson.png',\n  },\n  {\n    id: '76d65c26-f784-44a2-ac19-586678f7c2f2',\n    name: 'Michael Novotny',\n    email: 'michael@novotny.com',\n    image_url: '/customers/michael-novotny.png',\n  },\n  {\n    id: 'CC27C14A-0ACF-4F4A-A6C9-D45682C144B9',\n    name: 'Amy Burns',\n    email: 'amy@burns.com',\n    image_url: '/customers/amy-burns.png',\n  },\n  {\n    id: '13D07535-C59E-4157-A011-F8D2EF4E0CBB',\n    name: 'Balazs Orban',\n    email: 'balazs@orban.com',\n    image_url: '/customers/balazs-orban.png',\n  },\n];\n\nconst invoices = [\n  {\n    customer_id: customers[0].id,\n    amount: 15795,\n    status: 'pending',\n    date: '2022-12-06',\n  },\n  {\n    customer_id: customers[1].id,\n    amount: 20348,\n    status: 'pending',\n    date: '2022-11-14',\n  },\n  {\n    customer_id: customers[4].id,\n    amount: 3040,\n    status: 'paid',\n    date: '2022-10-29',\n  },\n  {\n    customer_id: customers[3].id,\n    amount: 44800,\n    status: 'paid',\n    date: '2023-09-10',\n  },\n  {\n    customer_id: customers[5].id,\n    amount: 34577,\n    status: 'pending',\n    date: '2023-08-05',\n  },\n  {\n    customer_id: customers[2].id,\n    amount: 54246,\n    status: 'pending',\n    date: '2023-07-16',\n  },\n  {\n    customer_id: customers[0].id,\n    amount: 666,\n    status: 'pending',\n    date: '2023-06-27',\n  },\n  {\n    customer_id: customers[3].id,\n    amount: 32545,\n    status: 'paid',\n    date: '2023-06-09',\n  },\n  {\n    customer_id: customers[4].id,\n    amount: 1250,\n    status: 'paid',\n    date: '2023-06-17',\n  },\n  {\n    customer_id: customers[5].id,\n    amount: 8546,\n    status: 'paid',\n    date: '2023-06-07',\n  },\n  {\n    customer_id: customers[1].id,\n    amount: 500,\n    status: 'paid',\n    date: '2023-08-19',\n  },\n  {\n    customer_id: customers[5].id,\n    amount: 8945,\n    status: 'paid',\n    date: '2023-06-03',\n  },\n  {\n    customer_id: customers[2].id,\n    amount: 1000,\n    status: 'paid',\n    date: '2022-06-05',\n  },\n];\n\nconst revenue = [\n  { month: 'Jan', revenue: 2000 },\n  { month: 'Feb', revenue: 1800 },\n  { month: 'Mar', revenue: 2200 },\n  { month: 'Apr', revenue: 2500 },\n  { month: 'May', revenue: 2300 },\n  { month: 'Jun', revenue: 3200 },\n  { month: 'Jul', revenue: 3500 },\n  { month: 'Aug', revenue: 3700 },\n  { month: 'Sep', revenue: 2500 },\n  { month: 'Oct', revenue: 2800 },\n  { month: 'Nov', revenue: 3000 },\n  { month: 'Dec', revenue: 4800 },\n];\n\nexport { users, customers, invoices, revenue };\n"],"names":[],"mappings":"AAAA,4GAA4G;AAC5G,uDAAuD;;;;;;;AACvD,MAAM,QAAQ;IACZ;QACE,IAAI;QACJ,MAAM;QACN,OAAO;QACP,UAAU;IACZ;CACD;AAED,MAAM,YAAY;IAChB;QACE,IAAI;QACJ,MAAM;QACN,OAAO;QACP,WAAW;IACb;IACA;QACE,IAAI;QACJ,MAAM;QACN,OAAO;QACP,WAAW;IACb;IACA;QACE,IAAI;QACJ,MAAM;QACN,OAAO;QACP,WAAW;IACb;IACA;QACE,IAAI;QACJ,MAAM;QACN,OAAO;QACP,WAAW;IACb;IACA;QACE,IAAI;QACJ,MAAM;QACN,OAAO;QACP,WAAW;IACb;IACA;QACE,IAAI;QACJ,MAAM;QACN,OAAO;QACP,WAAW;IACb;CACD;AAED,MAAM,WAAW;IACf;QACE,aAAa,SAAS,CAAC,EAAE,CAAC,EAAE;QAC5B,QAAQ;QACR,QAAQ;QACR,MAAM;IACR;IACA;QACE,aAAa,SAAS,CAAC,EAAE,CAAC,EAAE;QAC5B,QAAQ;QACR,QAAQ;QACR,MAAM;IACR;IACA;QACE,aAAa,SAAS,CAAC,EAAE,CAAC,EAAE;QAC5B,QAAQ;QACR,QAAQ;QACR,MAAM;IACR;IACA;QACE,aAAa,SAAS,CAAC,EAAE,CAAC,EAAE;QAC5B,QAAQ;QACR,QAAQ;QACR,MAAM;IACR;IACA;QACE,aAAa,SAAS,CAAC,EAAE,CAAC,EAAE;QAC5B,QAAQ;QACR,QAAQ;QACR,MAAM;IACR;IACA;QACE,aAAa,SAAS,CAAC,EAAE,CAAC,EAAE;QAC5B,QAAQ;QACR,QAAQ;QACR,MAAM;IACR;IACA;QACE,aAAa,SAAS,CAAC,EAAE,CAAC,EAAE;QAC5B,QAAQ;QACR,QAAQ;QACR,MAAM;IACR;IACA;QACE,aAAa,SAAS,CAAC,EAAE,CAAC,EAAE;QAC5B,QAAQ;QACR,QAAQ;QACR,MAAM;IACR;IACA;QACE,aAAa,SAAS,CAAC,EAAE,CAAC,EAAE;QAC5B,QAAQ;QACR,QAAQ;QACR,MAAM;IACR;IACA;QACE,aAAa,SAAS,CAAC,EAAE,CAAC,EAAE;QAC5B,QAAQ;QACR,QAAQ;QACR,MAAM;IACR;IACA;QACE,aAAa,SAAS,CAAC,EAAE,CAAC,EAAE;QAC5B,QAAQ;QACR,QAAQ;QACR,MAAM;IACR;IACA;QACE,aAAa,SAAS,CAAC,EAAE,CAAC,EAAE;QAC5B,QAAQ;QACR,QAAQ;QACR,MAAM;IACR;IACA;QACE,aAAa,SAAS,CAAC,EAAE,CAAC,EAAE;QAC5B,QAAQ;QACR,QAAQ;QACR,MAAM;IACR;CACD;AAED,MAAM,UAAU;IACd;QAAE,OAAO;QAAO,SAAS;IAAK;IAC9B;QAAE,OAAO;QAAO,SAAS;IAAK;IAC9B;QAAE,OAAO;QAAO,SAAS;IAAK;IAC9B;QAAE,OAAO;QAAO,SAAS;IAAK;IAC9B;QAAE,OAAO;QAAO,SAAS;IAAK;IAC9B;QAAE,OAAO;QAAO,SAAS;IAAK;IAC9B;QAAE,OAAO;QAAO,SAAS;IAAK;IAC9B;QAAE,OAAO;QAAO,SAAS;IAAK;IAC9B;QAAE,OAAO;QAAO,SAAS;IAAK;IAC9B;QAAE,OAAO;QAAO,SAAS;IAAK;IAC9B;QAAE,OAAO;QAAO,SAAS;IAAK;IAC9B;QAAE,OAAO;QAAO,SAAS;IAAK;CAC/B"}},
    {"offset": {"line": 344, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 350, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Users/Nayeem/Downloads/webprog/nextjs-dashboard/app/seed/route.ts"],"sourcesContent":["import bcrypt from 'bcrypt';\nimport { db } from '@vercel/postgres';\nimport { invoices, customers, revenue, users } from '../lib/placeholder-data';\n\nasync function seedUsers(client) {\n  await client.sql`CREATE EXTENSION IF NOT EXISTS \"uuid-ossp\"`;\n  await client.sql`\n    CREATE TABLE IF NOT EXISTS users (\n      id UUID DEFAULT uuid_generate_v4() PRIMARY KEY,\n      name VARCHAR(255) NOT NULL,\n      email TEXT NOT NULL UNIQUE,\n      password TEXT NOT NULL\n    );\n  `;\n\n  await Promise.all(\n    users.map(async (user) => {\n      const hashedPassword = await bcrypt.hash(user.password, 10);\n      return client.sql`\n        INSERT INTO users (id, name, email, password)\n        VALUES (${user.id}, ${user.name}, ${user.email}, ${hashedPassword})\n        ON CONFLICT (id) DO NOTHING;\n      `;\n    })\n  );\n}\n\nasync function seedInvoices(client) {\n  await client.sql`CREATE EXTENSION IF NOT EXISTS \"uuid-ossp\"`;\n\n  await client.sql`\n    CREATE TABLE IF NOT EXISTS invoices (\n      id UUID DEFAULT uuid_generate_v4() PRIMARY KEY,\n      customer_id UUID NOT NULL,\n      amount INT NOT NULL,\n      status VARCHAR(255) NOT NULL,\n      date DATE NOT NULL\n    );\n  `;\n\n  await Promise.all(\n    invoices.map((invoice) =>\n      client.sql`\n        INSERT INTO invoices (customer_id, amount, status, date)\n        VALUES (${invoice.customer_id}, ${invoice.amount}, ${invoice.status}, ${invoice.date})\n        ON CONFLICT (id) DO NOTHING;\n      `\n    )\n  );\n}\n\nasync function seedCustomers(client) {\n  await client.sql`CREATE EXTENSION IF NOT EXISTS \"uuid-ossp\"`;\n\n  await client.sql`\n    CREATE TABLE IF NOT EXISTS customers (\n      id UUID DEFAULT uuid_generate_v4() PRIMARY KEY,\n      name VARCHAR(255) NOT NULL,\n      email VARCHAR(255) NOT NULL,\n      image_url VARCHAR(255) NOT NULL\n    );\n  `;\n\n  await Promise.all(\n    customers.map((customer) =>\n      client.sql`\n        INSERT INTO customers (id, name, email, image_url)\n        VALUES (${customer.id}, ${customer.name}, ${customer.email}, ${customer.image_url})\n        ON CONFLICT (id) DO NOTHING;\n      `\n    )\n  );\n}\n\nasync function seedRevenue(client) {\n  await client.sql`\n    CREATE TABLE IF NOT EXISTS revenue (\n      month VARCHAR(4) NOT NULL UNIQUE,\n      revenue INT NOT NULL\n    );\n  `;\n\n  await Promise.all(\n    revenue.map((rev) =>\n      client.sql`\n        INSERT INTO revenue (month, revenue)\n        VALUES (${rev.month}, ${rev.revenue})\n        ON CONFLICT (month) DO NOTHING;\n      `\n    )\n  );\n}\n\nexport async function GET() {\n  const client = await db.connect(); // Moved inside function\n\n  try {\n    await client.sql`BEGIN`;\n    await seedUsers(client);\n    await seedCustomers(client);\n    await seedInvoices(client);\n    await seedRevenue(client);\n    await client.sql`COMMIT`;\n\n    return new Response(JSON.stringify({ message: 'Database seeded successfully' }), {\n      headers: { 'Content-Type': 'application/json' },\n    });\n  } catch (error) {\n    await client.sql`ROLLBACK`;\n    return new Response(JSON.stringify({ error: error.message }), {\n      status: 500,\n      headers: { 'Content-Type': 'application/json' },\n    });\n  } finally {\n    client.release(); // Ensure the client is released\n  }\n}\n"],"names":[],"mappings":";;;AAAA;AACA;AACA;AADA;;;;AAGA,eAAe,UAAU,MAAM;IAC7B,MAAM,OAAO,GAAG,CAAC,0CAA0C,CAAC;IAC5D,MAAM,OAAO,GAAG,CAAC;;;;;;;EAOjB,CAAC;IAED,MAAM,QAAQ,GAAG,CACf,mIAAA,CAAA,QAAK,CAAC,GAAG,CAAC,OAAO;QACf,MAAM,iBAAiB,MAAM,qGAAA,CAAA,UAAM,CAAC,IAAI,CAAC,KAAK,QAAQ,EAAE;QACxD,OAAO,OAAO,GAAG,CAAC;;gBAER,EAAE,KAAK,EAAE,CAAC,EAAE,EAAE,KAAK,IAAI,CAAC,EAAE,EAAE,KAAK,KAAK,CAAC,EAAE,EAAE,eAAe;;MAEpE,CAAC;IACH;AAEJ;AAEA,eAAe,aAAa,MAAM;IAChC,MAAM,OAAO,GAAG,CAAC,0CAA0C,CAAC;IAE5D,MAAM,OAAO,GAAG,CAAC;;;;;;;;EAQjB,CAAC;IAED,MAAM,QAAQ,GAAG,CACf,mIAAA,CAAA,WAAQ,CAAC,GAAG,CAAC,CAAC,UACZ,OAAO,GAAG,CAAC;;gBAED,EAAE,QAAQ,WAAW,CAAC,EAAE,EAAE,QAAQ,MAAM,CAAC,EAAE,EAAE,QAAQ,MAAM,CAAC,EAAE,EAAE,QAAQ,IAAI,CAAC;;MAEvF,CAAC;AAGP;AAEA,eAAe,cAAc,MAAM;IACjC,MAAM,OAAO,GAAG,CAAC,0CAA0C,CAAC;IAE5D,MAAM,OAAO,GAAG,CAAC;;;;;;;EAOjB,CAAC;IAED,MAAM,QAAQ,GAAG,CACf,mIAAA,CAAA,YAAS,CAAC,GAAG,CAAC,CAAC,WACb,OAAO,GAAG,CAAC;;gBAED,EAAE,SAAS,EAAE,CAAC,EAAE,EAAE,SAAS,IAAI,CAAC,EAAE,EAAE,SAAS,KAAK,CAAC,EAAE,EAAE,SAAS,SAAS,CAAC;;MAEpF,CAAC;AAGP;AAEA,eAAe,YAAY,MAAM;IAC/B,MAAM,OAAO,GAAG,CAAC;;;;;EAKjB,CAAC;IAED,MAAM,QAAQ,GAAG,CACf,mIAAA,CAAA,UAAO,CAAC,GAAG,CAAC,CAAC,MACX,OAAO,GAAG,CAAC;;gBAED,EAAE,IAAI,KAAK,CAAC,EAAE,EAAE,IAAI,OAAO,CAAC;;MAEtC,CAAC;AAGP;AAEO,eAAe;IACpB,MAAM,SAAS,MAAM,yRAAA,CAAA,KAAE,CAAC,OAAO,IAAI,wBAAwB;IAE3D,IAAI;QACF,MAAM,OAAO,GAAG,CAAC,KAAK,CAAC;QACvB,MAAM,UAAU;QAChB,MAAM,cAAc;QACpB,MAAM,aAAa;QACnB,MAAM,YAAY;QAClB,MAAM,OAAO,GAAG,CAAC,MAAM,CAAC;QAExB,OAAO,IAAI,SAAS,KAAK,SAAS,CAAC;YAAE,SAAS;QAA+B,IAAI;YAC/E,SAAS;gBAAE,gBAAgB;YAAmB;QAChD;IACF,EAAE,OAAO,OAAO;QACd,MAAM,OAAO,GAAG,CAAC,QAAQ,CAAC;QAC1B,OAAO,IAAI,SAAS,KAAK,SAAS,CAAC;YAAE,OAAO,MAAM,OAAO;QAAC,IAAI;YAC5D,QAAQ;YACR,SAAS;gBAAE,gBAAgB;YAAmB;QAChD;IACF,SAAU;QACR,OAAO,OAAO,IAAI,gCAAgC;IACpD;AACF"}},
    {"offset": {"line": 455, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}